name: Release Projects

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags-ignore:
      - '*-v*'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  release:
    if: |
      !startsWith(github.event.head_commit.message, 'chore(release):') &&
      !startsWith(github.event.head_commit.message, 'chore(repo):')

    runs-on: ubuntu-latest

    name: release

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true
          ref: main
          token: ${{ secrets.GH_TOKEN }}

      - name: Fetch Tags
        run: git fetch --tags

      - name: Set Git Config
        run: |
          git config pull.rebase false
          git config --global user.email "release-workflow@jsx.email"
          git config --global user.name "Release Workflow"
          git remote set-url origin https://github.com/${{ github.repository }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Enable Corepack
        id: pnpm-setup
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm config set script-shell "/usr/bin/bash"
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Sanity Check
        run: |
          echo git `git version`;
          echo branch `git branch --show-current`;
          echo node `node -v`;
          echo pnpm `pnpm -v`
          echo `moon --version`

      - name: pnpm install
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Release
        run: pnpm release
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
